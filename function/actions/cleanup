#!/bin/bash
## Bash Script to clear cached memory on (Ubuntu/Debian) Linux
## By Philipp Klaus
## see <http://blog.philippklaus.de/2011/02/clear-cached-memory-on-ubuntu/>




dir="$(dirname "$0")"

PURGED="$dir/data/purge.list"
 
 function unused {
     if (eval `resize` && whiptail \
         --title "Remove Un-used Pre-installed Applications" \
         --yesno "Current list of pre-installed applications to remove: \n\n$(cat $PURGED) \n\nAre you sure you want proceed?" \
         $LINES $COLUMNS $(( $LINES - 12 )) \
         --scrolltext ) then
        show_info 'Removing unused pre-installed applications...'
         show_warning 'Requires root privileges'
         # Feel free to change the contents of 'utilities.list' in the data folder to whatever suits your preference.
         sudo apt-get remove -y $(cat $PURGED)
         # Done
         show_success 'Done.'
         whiptail --title "Finished" --msgbox "Removal complete." 8 78
         cleanup
     else
         clear && cleanup
     fi
 }


# Remove old kernels
function kernels {
    if (whiptail --title "Remove Outdated Kernels" --yesno "If you're not currently using the newest kernel installed on your system, the following may break it. \n\nAre you sure you want proceed?" 10 60) then
        show_info 'Removing outdated kernel(s)...'
        show_warning 'Requires root privileges'
        sudo dpkg -l 'linux-*' | sed '/^ii/!d;/'"$(uname -r | sed "s/\(.*\)-\([^0-9]\+\)/\1/")"'/d;s/^[^ ]* [^ ]* \([^ ]*\).*/\1/;/[0-9]/!d' | grep -v linux-libc-dev | xargs sudo apt-get -y purge
        show_success 'Done.'
        whiptail --title "Finished" --msgbox "Outdated kernels have been successfully removed." 8 78
        cleanup
    else
        clear && cleanup
    fi
}

# Remove Orphaned Packages
function orphaned {
    show_info 'Removing orphaned packages...'
    show_warning 'Requires root privileges'
    sudo apt-get autoremove -y
    show_success 'Done.'
    whiptail --title "Finished" --msgbox "Orphaned packages have been successfully removed." 8 78
    cleanup
}

function leftovers {
    show_info 'Removing leftover configuration files...'
    show_warning 'Requires root privileges'
    sudo dpkg --purge $(COLUMNS=200 dpkg -l | grep '^rc' | tr -s ' ' | cut -d ' ' -f 2)
    show_success 'Done.'
    whiptail --title "Finished" --msgbox "Leftover configuration files have been removed." 8 78
    cleanup
}

function clean-cache {
    show_info 'Cleaning package cache...'
    show_warning 'Requires root privileges'
    sudo apt-get clean
      if [ "$(whoami)" != "root" ]
then
  echo "You have to run this script as Superuser!"
  exit 1
fi

# Get Memory Information
freemem_before=$(cat /proc/meminfo | grep MemFree | tr -s ' ' | cut -d ' ' -f2) && freemem_before=$(echo "$freemem_before/1024.0" | bc)
cachedmem_before=$(cat /proc/meminfo | grep "^Cached" | tr -s ' ' | cut -d ' ' -f2) && cachedmem_before=$(echo "$cachedmem_before/1024.0" | bc)

# Output Information
echo -e "This script will clear cached memory and free up your ram.\n\nAt the moment you have $cachedmem_before MiB cached and $freemem_before MiB free memory."

# Test sync
if [ "$?" != "0" ]
then
  echo "Something went wrong, It's impossible to sync the filesystem."
  exit 1
fi

# Clear Filesystem Buffer using "sync" and Clear Caches
sync && echo 3 > /proc/sys/vm/drop_caches

freemem_after=$(cat /proc/meminfo | grep MemFree | tr -s ' ' | cut -d ' ' -f2) && freemem_after=$(echo "$freemem_after/1024.0" | bc)

# Output Summary
echo -e "This freed $(echo "$freemem_after - $freemem_before" | bc) MiB, so now you have $freemem_after MiB of free RAM."

apt-get install bleachbit 
bleachbit --list | grep -E "[a-z]+\.[a-z]+" | grep -v system.free_disk_space | xargs bleachbit --clean
apt-get purge bleachbit
}
    show_success 'Done.'
    whiptail --title "Finished" --msgbox "Package cache has been cleaned." 8 78
    cleanup
  

# Cleanup System
function cleanup {
    eval `resize` 
    CLEANUP=$(whiptail \
        --notags \
        --title "System Cleanup" \
        --menu "\nWhat would you like to do?" \
        --cancel-button "Go Back" \
        $LINES $COLUMNS $(( $LINES - 12 )) \
        clean-cache 'Clean package cache' \
        leftovers   'Remove leftover configuration files' \
        orphaned    'Remove orphaned packages' \
        unused      'Remove unused pre-installed packages' \
        kernels     'Remove old kernel(s)' \
        3>&1 1>&2 2>&3)
     
    exitstatus=$?
    if [ $exitstatus = 0 ]; then
        clear && $CLEANUP
    else
        clear && main
    fi
}
